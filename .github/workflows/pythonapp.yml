name: CI

on:
  push:
    branches:
      - master
  pull_request:
  schedule:
    - cron: '0 8 * * *'

jobs:

  test:
    name: 'Test: Python ${{ matrix.python-version }} Django ${{ matrix.django-version }}'
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.11", "3.10", "3.9"]
        django-version: ["4.2", "4.1", "3.2"]
        exclude:
          - django-version: "3.2"
            python-version: "3.11"
    env:
      PYTHONUNBUFFERED: 1
      PYTHONWARNINGS: always
      COVERAGE_FILE: coverage  # note: not .coverage: https://github.com/actions/upload-artifact/issues/447
    steps:
    - name: Checkout
      run: |
        echo $GITHUB_REF $GITHUB_SHA
        git clone --depth 1 https://github.com/$GITHUB_REPOSITORY.git .
        git fetch origin $GITHUB_SHA:temporary-ci-branch
        git checkout $GITHUB_SHA || (git fetch && git checkout $GITHUB_SHA)

    - name: 'Set up Python ${{ matrix.python-version }}'
      uses: actions/setup-python@v5
      # https://github.com/marketplace/actions/setup-python
      with:
        python-version: '${{ matrix.python-version }}'
        cache: 'pip' # caching pip dependencies
        cache-dependency-path: '**/poetry.lock'

    - name: 'Bootstrap Poetry'
      run: make install-poetry

    - name: 'Update PATH for Poetry'
      run: echo "$HOME/.local/bin" >> $GITHUB_PATH

    - name: 'Install package'
      run: make install

    - name: 'List installed packages'
      run: poetry run pip freeze

    - name: 'List all tox test environments'
      run: make tox-listenvs

    - name: 'Install Browsers for Playwright tests'
      run: make playwright-install

    - name: 'Run tests with Python ${{ matrix.python-version }} + Django ${{ matrix.django-version }}'
      run: poetry run tox -e $(echo py${{ matrix.python-version }}-django${{ matrix.django-version }} | tr -d .)

    - name: Store partial coverage data
      uses: actions/upload-artifact@v4
      with:
        name: coverage-data-py${{ matrix.python-version }}-dj${{ matrix.django-version }}
        path: "coverage.*"  # note: not .coverage: https://github.com/actions/upload-artifact/issues/447
        if-no-files-found: error
        # crash if no files for upload could be found.
        # the most likely reasons for that are an error with the coverage tool itself
        # or a disparity between configured tox envs and the action's matrix.

  coverage:
    name: Coverage report
    runs-on: ubuntu-latest
    needs: test
    env:
      COVERAGE_FILE: coverage  # note: not .coverage: https://github.com/actions/upload-artifact/issues/447
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install coverage
        run: python -m pip install --upgrade coverage[toml]

      - name: Download partial coverage data
        uses: actions/download-artifact@v4
        with:
          pattern: coverage-data-*
          merge-multiple: true

      - name: Combine individual data files
        run: python -m coverage combine

      - name: Print report
        run: python -m coverage report

      - name: Generate HTML report
        run: python -m coverage html

      - name: Upload HTML report artifact
        uses: actions/upload-artifact@v4
        with:
          name: coverage-html-report
          path: "htmlcov/*"
          if-no-files-found: error

      - name: Upload report to Codecov
        uses: codecov/codecov-action@v4
        with:
          files: ${{ env.COVERAGE_FILE }}
          token: ${{ secrets.CODECOV_TOKEN }}
          fail_ci_if_error: true
          verbose: True
