[tool.poetry]
name = 'bx_django_utils'
version = "36"
description = 'Various Django utility functions'
homepage = "https://github.com/boxine/bx_django_utils/"
authors = [
    'Jens Diemer <jens.diemer@boxine.de>',
    'Philipp Hagemeister <phihag@phihag.de>',
    'Florian Braun <mail@chiron-online.de>'
]
classifiers = [
    'Development Status :: 5 - Production/Stable',
    'Topic :: Software Development :: Libraries :: Python Modules',
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3 :: Only",
    'Framework :: Django',
    'Intended Audience :: Developers',
]
license = 'MIT'
keywords=['django', 'utilities']
include = ['LICENSE', 'README.md']

readme='README.md'


[tool.poetry.dependencies]
python = '>=3.7,<4.0.0'  # Enforce 3.8 in the future
bx_py_utils = '>=52'  # https://github.com/boxine/bx_py_utils
django = '*'
python-stdnum = '*'  # https://arthurdejong.org/python-stdnum/

[tool.poetry.dev-dependencies]
boto3 = '*'  # needed for e.g.: bx_django_utils/aws/ stuff!
requests-mock = '*'
tox = '*'
pytest = '*'
pytest-randomly = '*'
pytest-cov = '*'
pytest-django = '*'
pytest-darker = '*'  # https://github.com/akaihola/pytest-darker
darker = '*'  # https://github.com/akaihola/darker
flake8 = '*'
isort = '*'
poetry-publish = '*'  # https://github.com/jedie/poetry-publish
django-debug-toolbar = '*'
beautifulsoup4 = '*'
lxml = '*'
pytest-playwright = '*'  # https://playwright.dev/python/
pdoc = '*'  # https://pdoc.dev/
model-bakery = '*'  # https://github.com/model-bakers/model_bakery

[tool.poetry.scripts]
publish = "bx_django_utils_tests.test_project.publish:publish"


[build-system]
requires = ['poetry>=0.12']
build-backend = 'poetry.masonry.api'


[tool.darker]
src = ['.']
revision = "origin/master..."
line_length = 100
verbose = true
skip_string_normalization = true
diff = false
check = false
stdout = false
isort = true
lint = [
    "flake8",
]
log_level = "INFO"


[tool.isort]
# https://pycqa.github.io/isort/docs/configuration/config_files/#pyprojecttoml-preferred-format
atomic=true
profile='black'
line_length=120
skip_glob=["*/htmlcov/*","*/migrations/*"]
known_first_party=["bx_django_utils","bx_django_utils_tests"]
lines_after_imports=2


[tool.coverage.run]
omit=[".*"]


[tool.pytest.ini_options]
# https://docs.pytest.org/en/latest/customize.html#pyproject-toml
minversion = "6.0"
DJANGO_SETTINGS_MODULE="bx_django_utils_tests.test_project.settings"
norecursedirs = ".* __pycache__ coverage* dist htmlcov"
markers = [
    "playwright: marks Playwright tests",
]
# sometimes helpfull "addopts" arguments:
#    -vv
#    --verbose
#    --capture=no
#    --trace-config
#    --full-trace
#    -p no:warnings
addopts = """
    --reuse-db
    --nomigrations
    --cov=.
    --cov-report term-missing
    --no-cov-on-fail
    --showlocals
    --darker
    --doctest-modules
    --failed-first
    --last-failed-no-failures all
    --new-first
    -p no:randomly
"""


[tool.tox]
# https://tox.readthedocs.io/en/latest/example/basic.html#pyproject-toml-tox-legacy-ini
legacy_tox_ini = """
[tox]
isolated_build = True
envlist = py{38,39,310}-django{3.2,4.0}
skip_missing_interpreters = True

[testenv]
passenv = *
deps =
    django3.2: django>=3.2,<3.3
    django4.0: django>=4.0,<4.1
whitelist_externals =
    poetry
commands =
    python --version
    poetry run django-admin --version
    poetry run pytest
"""
