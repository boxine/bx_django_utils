[tool.poetry]
name = 'bx_django_utils'
version = "6"
description = 'Various Django utility functions'
homepage = "https://github.com/boxine/bx_django_utils/"
authors = [
    'Jens Diemer <jens.diemer@boxine.de>',
    'Philipp Hagemeister <phihag@phihag.de>',
    'Florian Braun <mail@chiron-online.de>'
]
classifiers = [
    'Development Status :: 5 - Production/Stable',
    'Topic :: Software Development :: Libraries :: Python Modules',
    'Framework :: Django',
    'Intended Audience :: Developers',
]
license = 'MIT'
keywords=['django', 'utilities']
readme='README.md'

[tool.poetry.dependencies]
python = '>=3.6,<4.0.0'
bx_py_utils = '>=41'  # https://github.com/boxine/bx_py_utils
django = '*'
python-stdnum = "*"  # https://arthurdejong.org/python-stdnum/

[tool.poetry.dev-dependencies]
boto3 = "*"  # needed for e.g.: bx_django_utils/aws/ stuff!
requests-mock = "*"
tox = '*'
pytest = '*'
pytest-randomly = '*'
pytest-cov = '*'
pytest-django = '*'
flake8 = '*'
flynt = '*'
autopep8 = '*'
isort = '*'
poetry-publish = "*"  # https://github.com/jedie/poetry-publish
django-debug-toolbar = "*"
tox-poetry-installer = {extras = ["poetry"], version = "*"}  # https://github.com/enpaul/tox-poetry-installer

# pdoc > 0.4.1 needs Python 3.7, but we still support 3.6,
# so we must install pdoc only with 3.7 or newer, to get a up-to-date version.
# The result is, that we can't generate the docs with Python 3.6, but this
# seems not to be a show stopper ;)
pdoc = { version = "*", python = ">=3.7" }  # https://pdoc.dev/

[tool.poetry.scripts]
publish = "bx_django_utils_tests.test_project.publish:publish"

[build-system]
requires = ['poetry>=0.12']
build-backend = 'poetry.masonry.api'


[tool.autopep8]
# https://github.com/hhatto/autopep8#pyprojecttoml
max_line_length = 120
exclude="*/htmlcov/*,*/migrations/*,*/volumes/*"


[tool.isort]
# https://pycqa.github.io/isort/docs/configuration/config_files/#pyprojecttoml-preferred-format
atomic=true
line_length=120
case_sensitive=false
skip_glob=["*/htmlcov/*","*/migrations/*"]
multi_line_output=3
include_trailing_comma=true
known_first_party=["django_tools","django_tools_test_project"]
no_lines_before="LOCALFOLDER"
default_section="THIRDPARTY"
sections=["FUTURE","STDLIB","THIRDPARTY","FIRSTPARTY","LOCALFOLDER"]
lines_after_imports=2


[tool.coverage.run]
omit=[".*"]


[tool.pytest.ini_options]
# https://docs.pytest.org/en/latest/customize.html#pyproject-toml
minversion = "6.0"
DJANGO_SETTINGS_MODULE="bx_django_utils_tests.test_project.settings"
norecursedirs = ".* __pycache__ coverage* dist htmlcov"
# sometimes helpfull "addopts" arguments:
#    -vv
#    --verbose
#    --capture=no
#    --trace-config
#    --full-trace
#    -p no:warnings
addopts = """
    --import-mode=importlib
    --reuse-db
    --nomigrations
    --cov=.
    --cov-report term-missing
    --no-cov-on-fail
    --showlocals
    --doctest-modules
    --failed-first
    --last-failed-no-failures all
    --new-first
    -p no:randomly
"""


[tool.tox]
# https://tox.readthedocs.io/en/latest/example/basic.html#pyproject-toml-tox-legacy-ini
legacy_tox_ini = """
[tox]
isolated_build = True
envlist = py{37,38,39}-django{2.2,3.1,3.2}
skip_missing_interpreters = True

[testenv]
passenv = *
deps =
    django2.2: django>=2.2,<2.3
    django3.1: django>=3.1,<3.2
    django3.2: django>=3.2,<3.3
install_dev_deps=True
commands =
    python --version
    django-admin --version
    python -m pytest
"""
