[tool.poetry]
name = 'bx_django_utils'
version = "67"
description = 'Various Django utility functions'
homepage = "https://github.com/boxine/bx_django_utils/"
authors = [
    'Jens Diemer <jens.diemer@boxine.de>',
    'Philipp Hagemeister <phihag@phihag.de>',
    'Florian Braun <mail@chiron-online.de>'
]
classifiers = [
    'Development Status :: 5 - Production/Stable',
    'Topic :: Software Development :: Libraries :: Python Modules',
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3 :: Only",
    'Framework :: Django',
    'Intended Audience :: Developers',
]
license = 'MIT'
keywords=['django', 'utilities']
include = ['LICENSE', 'README.md']
readme='README.md'
packages = [{ include = "bx_django_utils" }, { include = "bx_django_utils_tests" }]

[tool.poetry.urls]
"Bug Tracker" = "https://github.com/boxine/bx_django_utils/issues"

[tool.poetry.dependencies]
python = '>=3.9,<4.0.0'
django = '>=3.2'
bx_py_utils = '>=85'  # https://github.com/boxine/bx_py_utils
python-stdnum = '*'  # https://arthurdejong.org/python-stdnum/

[tool.poetry.dev-dependencies]
boto3 = '>=1.25.0'  # needed for e.g.: bx_django_utils/aws/ stuff!
requests-mock = '*'
tox = '>=4.4.4'  # https://github.com/tox-dev/tox
coverage = '*'  # https://github.com/nedbat/coveragepy
flake8 = '*'  # https://github.com/pycqa/flake8
manageprojects = '*'  # https://github.com/jedie/manageprojects
twine = '*'  # https://github.com/pypa/twine/
django-debug-toolbar = '*'
beautifulsoup4 = '*'
lxml = '*'
playwright = '*'  # https://playwright.dev/python/
pdoc = '*'  # https://pdoc.dev/
model-bakery = '*'  # https://github.com/model-bakers/model_bakery
tblib = '*'  # https://github.com/ionelmc/python-tblib
packaging = '*'  # https://pypi.org/project/packaging/
EditorConfig = '*'  # https://pypi.org/project/EditorConfig/

# https://github.com/akaihola/darker
# https://github.com/ikamensh/flynt
# https://github.com/pycqa/isort
# https://github.com/pygments/pygments
darker = { version = "*", extras = ["flynt", "isort", "color"] }
[tool.poetry.scripts]
publish = "bx_django_utils_tests.test_project.publish:publish"


[build-system]
requires = ['poetry-core>=1.0.0']
build-backend = 'poetry.core.masonry.api'


[tool.darker]
revision = "origin/master..."
src = ['.']
line_length = 119
verbose = true
color = true
skip_string_normalization = true
diff = false
check = false
stdout = false
isort = true
flynt = true
lint = [
    "flake8",
]
log_level = "INFO"


[tool.isort]
# https://pycqa.github.io/isort/docs/configuration/config_files.html
atomic=true
profile='black'
skip_glob=[".*", "*/htmlcov/*","*/migrations/*"]
known_first_party=['bx_django_utils']
line_length=119
lines_after_imports=2


[tool.coverage.run]
branch = true
parallel = true
concurrency = ["multiprocessing"]
source_pkgs=['bx_django_utils']
command_line = 'manage.py test --parallel'  # Add --shuffle if we remove Django v3.2 support

[tool.coverage.report]
omit = ['.*', '*/tests/*','*/migrations/*']
skip_empty = true
fail_under = 30
show_missing = true
exclude_lines = [
    'if self.debug:',
    'pragma: no cover',
    'raise NotImplementedError',
    'if __name__ == .__main__.:',
]


[tool.tox]  # https://tox.wiki/en/latest/config.html#pyproject-toml
legacy_tox_ini = """
[tox]
isolated_build = True
envlist =
    py{39,310,311}-django{41,42}
    py{39,310}-django32
skip_missing_interpreters = True

[testenv]
passenv = *
deps =
    django42: django>=4.2,<4.3
    django41: django>=4.1,<4.2
    django32: django>=3.2,<3.3
    model-bakery
    playwright
    pdoc
    beautifulsoup4
    lxml
    django-debug-toolbar
    tblib
    coverage[toml]
    manageprojects
    packaging
    editorconfig
commands_pre =
    {envpython} -m playwright install chromium firefox
commands =
    {envpython} -m coverage run --context='{envname}'
    {envpython} -m coverage combine --append
    {envpython} -m coverage xml
    {envpython} -m coverage report
"""


[tool.mypy]
warn_unused_configs = true
ignore_missing_imports = true
allow_redefinition = true  # https://github.com/python/mypy/issues/7165
show_error_codes = true
plugins = []
exclude = ['.venv', 'tests', 'migrations']


[manageprojects] # https://github.com/jedie/manageprojects
initial_revision = "70663ef"
initial_date = 2023-02-07T09:52:21+01:00
cookiecutter_template = "https://github.com/jedie/cookiecutter_templates/"
cookiecutter_directory = "poetry-django-app"

[manageprojects.cookiecutter_context.cookiecutter]
full_name = "Jens Diemer"
github_username = "jedie"
author_email = "jens.diemer@boxine.de"
package_name = "bx_django_utils"
package_version = "0.0.1"
package_description = "Various Django utility functions"
package_url = "https://github.com/boxine/bx_django_utils"
issues_url = "https://github.com/boxine/bx_django_utils/issues"
license = "MIT"
_template = "https://github.com/jedie/cookiecutter_templates/"
applied_migrations = [
    "d970456", # 2023-02-20T16:19:35+01:00
    "89aadc0", # 2023-03-17T09:44:50+01:00
    "53a7e85", # 2023-04-10T19:08:56+02:00
    "877e2ec", # 2023-08-17T20:54:24+02:00
]
